% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGeneric.R, R/Rn_Gauss.R, R/Rn_floorNorm.R,
%   R/standardSimplex_Dirichlet.R, R/standardSimplex_exp_sum.R,
%   R/unitBall_normGauss.R, R/unitBall_polynomial.R, R/unitCube_cos2.R,
%   R/unitCube_floor.R, R/unitSphere_innerProduct1.R, R/unitSphere_polynomial.R
\name{domainCheck}
\alias{domainCheck}
\alias{domainCheck,Rn_Gauss,matrix-method}
\alias{domainCheck,Rn_floorNorm,matrix-method}
\alias{domainCheck,standardSimplex_Dirichlet,matrix-method}
\alias{domainCheck,standardSimplex_exp_sum,matrix-method}
\alias{domainCheck,unitBall_normGauss,matrix-method}
\alias{domainCheck,unitBall_polynomial,matrix-method}
\alias{domainCheck,unitCube_cos2,matrix-method}
\alias{domainCheck,unitCube_floor,matrix-method}
\alias{domainCheck,unitSphere_innerProduct1,matrix-method}
\alias{domainCheck,unitSphere_polynomial,matrix-method}
\title{Check if node points are in the domain of a test function instance}
\usage{
domainCheck(object, x)

\S4method{domainCheck}{Rn_Gauss,matrix}(object, x)

\S4method{domainCheck}{Rn_floorNorm,matrix}(object, x)

\S4method{domainCheck}{standardSimplex_Dirichlet,matrix}(object, x)

\S4method{domainCheck}{standardSimplex_exp_sum,matrix}(object, x)

\S4method{domainCheck}{unitBall_normGauss,matrix}(object, x)

\S4method{domainCheck}{unitBall_polynomial,matrix}(object, x)

\S4method{domainCheck}{unitCube_cos2,matrix}(object, x)

\S4method{domainCheck}{unitCube_floor,matrix}(object, x)

\S4method{domainCheck}{unitSphere_innerProduct1,matrix}(object, x)

\S4method{domainCheck}{unitSphere_polynomial,matrix}(object, x)
}
\arguments{
\item{object}{Test function that gets evaluated}

\item{x}{Matrix where each row represents one evaluation point}
}
\value{
Vector where each element (TRUE or FALSE) indicates if a point (row in the input matrix) is in the integration domain
}
\description{
domainCheck is a generic function that allows to test if a collection of evaluation points are inside the integration domain associated to the test function instance or not.
}
\author{
Klaus Herrmann
}
